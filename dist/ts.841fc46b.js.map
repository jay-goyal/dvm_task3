{"version":3,"sources":["ts/hero.ts","ts/index.ts"],"names":[],"mappings":"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","file":"ts.841fc46b.js","sourceRoot":"..","sourcesContent":["const hero = document.querySelector(\"#hero\") as HTMLDivElement;\nconst heroPar = document.querySelector(\"#hero-par\") as HTMLParagraphElement;\nconst heroImg = document.querySelector(\"#hero-img\") as HTMLDivElement;\nconst heroLink = document.querySelector(\"#hero-link\") as HTMLDivElement;\nconst nextElem = document.querySelector(\"#next\") as HTMLButtonElement;\nconst prevElem = document.querySelector(\"#prev\") as HTMLButtonElement;\nlet currElem = 0;\nlet touchstartX = 0;\nlet touchendX = 0;\n\nconst setElem = () => {\n  heroPar.innerText = elements[currElem].text;\n  heroImg.style.backgroundImage = `url(\"${elements[currElem].image}\")`;\n  heroLink.innerText = elements[currElem].link;\n};\n\nconst elements = [\n  {\n    text: \"Phase One is free & open daily\",\n    image: \"../img/hero/img1.avif\",\n    link: \"Plan your visit\",\n  },\n  {\n    text: \"Turning historic tracks into an unparalleled park\",\n    image: \"img/hero/img2.avif\",\n    link: \"See the full version\",\n  },\n];\n\nsetElem();\n\nnextElem.addEventListener(\"click\", () => {\n  currElem = 1 - currElem;\n  setElem();\n});\n\nprevElem.addEventListener(\"click\", () => {\n  currElem = 1 - currElem;\n  setElem();\n});\n\nhero.addEventListener(\"touchstart\", (evt) => {\n  touchstartX = evt.changedTouches[0].screenX;\n});\n\nhero.addEventListener(\"touchend\", (evt) => {\n  touchendX = evt.changedTouches[0].screenX;\n  if (touchendX !== touchstartX) {\n    currElem = 1 - currElem;\n    setElem();\n  }\n});\n","import \"./hero\";\n\nconst nav = document.querySelector(\"nav\") as HTMLDivElement;\n\nconst addOpen = (entries: IntersectionObserverEntry[], observer) => {\n  entries.forEach((entry) => {\n    if (entry.isIntersecting) {\n      entry.target.classList.add(\"open\");\n    }\n  });\n};\n\nconst obsOptions = {};\nconst obs = new IntersectionObserver(addOpen, obsOptions);\n\nobs.observe(document.querySelector(\"body\"));\n\nlet lastScrollY = window.scrollY;\nwindow.addEventListener(\"scroll\", () => {\n  if (lastScrollY < window.scrollY) {\n    nav.id = \"nav-open\";\n    setTimeout(() => {\n      nav.id = \"nav-closed\";\n    }, 1000);\n  } else {\n    nav.id = \"nav-closed\";\n  }\n\n  lastScrollY = window.scrollY;\n});\n"]}