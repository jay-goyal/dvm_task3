{"version":3,"sources":["ts/hero.ts","ts/index.ts"],"names":[],"mappings":"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","file":"ts.841fc46b.js","sourceRoot":"..","sourcesContent":["const hero = document.querySelector(\"#hero\") as HTMLDivElement;\nconst heroPar = document.querySelector(\"#hero-par\") as HTMLParagraphElement;\nconst heroImg = document.querySelector(\"#hero-img\") as HTMLDivElement;\nconst heroLink = document.querySelector(\"#hero-link\") as HTMLDivElement;\nconst nextElem = document.querySelector(\"#next\") as HTMLButtonElement;\nconst prevElem = document.querySelector(\"#prev\") as HTMLButtonElement;\nlet currElem = 0;\nlet touchstartX = 0;\nlet touchendX = 0;\n\nconst setElem = () => {\n  heroPar.innerText = elements[currElem].text;\n  heroImg.style.backgroundImage = `url(\"${elements[currElem].image}\")`;\n  heroLink.innerText = elements[currElem].link;\n};\n\nconst elements = [\n  {\n    text: \"Phase One is free & open daily\",\n    image: \"../img/hero/img1.avif\",\n    link: \"Plan your visit\",\n  },\n  {\n    text: \"Turning historic tracks into an unparalleled park\",\n    image: \"img/hero/img2.avif\",\n    link: \"See the full version\",\n  },\n];\n\nsetElem();\n\nnextElem.addEventListener(\"click\", () => {\n  currElem = 1 - currElem;\n  setElem();\n});\n\nprevElem.addEventListener(\"click\", () => {\n  currElem = 1 - currElem;\n  setElem();\n});\n\nhero.addEventListener(\"touchstart\", (evt) => {\n  touchstartX = evt.changedTouches[0].screenX;\n});\n\nhero.addEventListener(\"touchend\", (evt) => {\n  touchendX = evt.changedTouches[0].screenX;\n  if (touchendX !== touchstartX) {\n    currElem = 1 - currElem;\n    setElem();\n  }\n});\n","import \"./hero\";\n\nconst nav = document.querySelector(\"nav\") as HTMLDivElement;\n\nconst addOpen = (entries, observer) => {\n  entries.forEach((entry) => {\n    let classes = entry.classList;\n    if (!classes.contains(\"open\")) {\n      classes.add(\"open\");\n    }\n    entry.classList = classes;\n  });\n};\n\nconst obsOptions = {};\nconst obs = new IntersectionObserver(addOpen, obsOptions);\n\nconst els = document.querySelectorAll(\":not(.open)\");\nels.forEach((elem) => {\n  obs.observe(elem);\n});\n\nlet lastScrollY = window.scrollY;\nwindow.addEventListener(\"scroll\", () => {\n  if (lastScrollY < window.scrollY) {\n    nav.id = \"nav-open\";\n    setTimeout(() => {\n      nav.id = \"nav-closed\";\n    }, 1000);\n  } else {\n    nav.id = \"nav-closed\";\n  }\n\n  lastScrollY = window.scrollY;\n});\n"]}